# Usage:
# export STACK_NAME=<stack name>
# export SERVICE_STACK=<service stack>
# export GITHUB_REPO=<repo name>
# export GITHUB_BRANCH=master
# export GITHUB_TOKEN=<personal oauth token>
# export GITHUB_USER=<github user>
# aws cloudformation create-stack \
#   --stack-name $STACK_NAME \
#   --template-body file://pipeline.github.template.yml \
#   --capabilities CAPABILITY_IAM \
#   --parameters \
#       ParameterKey=GitHubBranch,ParameterValue=$GITHUB_BRANCH \
#       ParameterKey=GitHubRepo,ParameterValue=$GITHUB_REPO \
#       ParameterKey=GitHubToken,ParameterValue=$GITHUB_TOKEN \
#       ParameterKey=GitHubUser,ParameterValue=$GITHUB_USER \
#       ParameterKey=ServiceStackName,ParameterValue=$SERVICE_STACK
AWSTemplateFormatVersion: '2010-09-09'
Parameters:  
  ServiceStackName:
    Type: String
    Default: 'bgf-ecs-service'

  GitHubRepo:
    Type: String
    Default: 'BGF'

  GitHubBranch:
    Type: String
    Default: 'master'

  GitHubToken:
    Type: String
    NoEcho: true

  GitHubUser:
    Type: String
    Default: 'davidbrownza'

Resources:
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource:                
                - Fn::ImportValue:
                    !Join [':', [!Ref 'ServiceStackName', 'RepositoryArn']]
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:DescribeTaskDefinition
                  - ecs:DescribeTasks
                  - ecs:ListTasks
                  - ecs:RegisterTaskDefinition
                  - ecs:UpdateService
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole
              - Resource: "*"
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack

  CloudFormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action: "*"

  ArtifactBucket:
    Type: AWS::S3::Bucket

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: 
              Fn::ImportValue:
                !Join [':', [!Ref 'ServiceStackName', 'RepositoryUri']]
          - Name: SERVICE_NAME
            Value: 
              Fn::ImportValue:
                !Join [':', [!Ref 'ServiceStackName', 'ServiceName']]
      Name: !Ref AWS::StackName
      ServiceRole: !Ref CodeBuildServiceRole

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Infrastructure
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Ref ServiceStackName
                Capabilities: CAPABILITY_IAM
                OutputFileName: 'StackOutput.json'
                RoleArn: !GetAtt CloudFormationServiceRole.Arn
                TemplatePath: BuildOutput::cfn/service.template.yml
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
            - Name: Service
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: 
                  Fn::ImportValue:
                    !Join [':', [!Ref 'ServiceStackName', 'ClusterName']]
                ServiceName: 
                  Fn::ImportValue:
                    !Join [':', [!Ref 'ServiceStackName', 'ServiceName']]
                FileName: imagedefinitions.json
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 2

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}