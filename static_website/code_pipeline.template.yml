# Usage:
# export STACK_NAME=bgf-website-pipeline
# export PROJECT_NAME=bgf-website
# export PROJECT_SOURCE=https://github.com/davidbrownza/BGF-UI/tree/master
# export GITHUB_OWNER=davidbrownza
# export GITHUB_REPO=BGF-UI
# export GITHUB_TOKEN=8b16b51ec8c49237df4071e88bc1d0a288cf835a
# export WEBSITE_BUCKET=bgf-website-websitebucket-1twnrsxvy1z0i
# aws cloudformation create-stack \
#   --stack-name $STACK_NAME \
#   --template-body file://code_pipeline.template.yml \
#   --capabilities CAPABILITY_IAM \
#   --parameters \
#       ParameterKey=ProjectName,ParameterValue=$PROJECT_NAME \
#       ParameterKey=ProjectSource,ParameterValue=$PROJECT_SOURCE \
#       ParameterKey=GithubOwner,ParameterValue=$GITHUB_OWNER \
#       ParameterKey=GithubRepo,ParameterValue=$GITHUB_REPO \
#       ParameterKey=GithubOAuthToken,ParameterValue=$GITHUB_TOKEN \
#       ParameterKey=WebsiteBucket,ParameterValue=$WEBSITE_BUCKET 
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  ProjectName:
    Type: String
    Description: Project name
  
  ProjectSource: 
    Type: String
    Description: "Source control URL (e.g. Github)"
  
  GithubOwner:
    Type: String
    Description: "Github repo owner"
  
  GithubRepo:
    Type: String
    Description: "Github repo name"
  
  GithubOAuthToken:
    Type: String
    Description: "Github personal access token"
  
  WebsiteBucket:
    Type: String
    Description: "Name of bucket that website should be deployed to"

Resources:
  CodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${ProjectName}-build
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
        Name: !Ref ProjectName
      Source: 
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/nodejs:8.11.0"
        EnvironmentVariables:
          - 
            Name: 'DeployBucket'
            Type: PLAINTEXT
            Value: !Ref WebsiteBucket
      Source:
        Type: CODEPIPELINE
  
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource: 
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
              - 
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource: 
                  - !Join [ "", [ "arn:aws:s3:::", !Ref WebsiteBucket ] ]
                  - !Join [ "", [ "arn:aws:s3:::", !Ref WebsiteBucket, "/*" ] ]
              -
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "cloudfront:CreateInvalidation"
                Resource:
                  - "*"

  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt CodePipeLineRole.Arn
      ArtifactStore:
        Location: !Ref PipelineBucket
        Type: S3
      Stages:
        - 
          Name: Source
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts: 
                - 
                  Name: MyApp
              Configuration:
                Owner: !Ref GithubOwner
                Repo: !Ref GithubRepo
                Branch: master
                OAuthToken: !Ref GithubOAuthToken
        - 
          Name: Staging
          Actions: 
            - 
              Name: BuildAction
              ActionTypeId: 
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts: 
                - 
                  Name: MyApp
              OutputArtifacts: 
                - 
                  Name: MyAppBuild
              Configuration:
                ProjectName: !Ref CodeBuild

  CodePipeLineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource: 
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
              - 
                Effect: Allow  
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                Resource: "*"
  
  # Temp bucket for storing build artifacts
  PipelineBucket: 
    Type: 'AWS::S3::Bucket'
    Properties: {}